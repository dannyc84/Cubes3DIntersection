{
	"info": {
		"_postman_id": "b49283f2-425e-493e-8665-8ee8eccb34d2",
		"name": "Cubes3Dntersection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST Cubes 3D Intersection - Cubes3DShouldTouch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7893086-c287-4e88-bf0e-87fcb5199948",
						"exec": [
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
							"\r",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
							"\r",
							"if (contentTypeHeaderExists) {\r",
							"    tests[\"Content-Type is application/json\"] = \r",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");\r",
							"}\r",
							"\r",
							"const body = pm.response.json();\r",
							"\r",
							"pm.test(\"Expects the Collision to be true\", function() {\r",
							"    pm.expect(body).to.have.property(\"Collision\", true);\r",
							"});\r",
							"\r",
							"pm.test(\"Expects the IntersectionVolume to be zero\", function() {\r",
							"    pm.expect(body).to.have.property(\"IntersectionVolume\", 0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"FirstCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 2,\r\n      \"y0\": 2,\r\n      \"z0\": 2\r\n    }\r\n  },\r\n  \"SecondCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 4,\r\n      \"y0\": 2,\r\n      \"z0\": 2\r\n    }\r\n  },\r\n  \"edgesLength\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:44340/api/Cubes3DIntersection/post",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44340",
					"path": [
						"api",
						"Cubes3DIntersection",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Cubes 3D Intersection - Cubes3DShouldOverlap",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7303f186-7233-45a5-b55e-b1b1e189a517",
						"exec": [
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
							"\r",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
							"\r",
							"if (contentTypeHeaderExists) {\r",
							"    tests[\"Content-Type is application/json\"] = \r",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");\r",
							"}\r",
							"\r",
							"const body = pm.response.json();\r",
							"\r",
							"pm.test(\"Expects the Collision to be true\", function() {\r",
							"    pm.expect(body).to.have.property(\"Collision\", true);\r",
							"});\r",
							"\r",
							"pm.test(\"Expects the IntersectionVolume to be zero\", function() {\r",
							"    pm.expect(body).to.have.property(\"IntersectionVolume\", 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"FirstCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 2,\r\n      \"y0\": 2,\r\n      \"z0\": 2\r\n    }\r\n  },\r\n  \"SecondCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 3,\r\n      \"y0\": 2,\r\n      \"z0\": 2\r\n    }\r\n  },\r\n  \"edgesLength\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:44340/api/Cubes3DIntersection/post",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44340",
					"path": [
						"api",
						"Cubes3DIntersection",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Cubes 3D Intersection - Cubes3DShouldNotTouch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "54008a37-f61c-47a2-9820-ce9e551c74dd",
						"exec": [
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
							"\r",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
							"\r",
							"if (contentTypeHeaderExists) {\r",
							"    tests[\"Content-Type is application/json\"] = \r",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");\r",
							"}\r",
							"\r",
							"const body = pm.response.json();\r",
							"\r",
							"pm.test(\"Expects the Collision to be true\", function() {\r",
							"    pm.expect(body).to.have.property(\"Collision\", false);\r",
							"});\r",
							"\r",
							"pm.test(\"Expects the IntersectionVolume to be zero\", function() {\r",
							"    pm.expect(body).to.have.property(\"IntersectionVolume\", 0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"FirstCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 2,\r\n      \"y0\": 2,\r\n      \"z0\": 2\r\n    }\r\n  },\r\n  \"SecondCube3D\": {\r\n    \"pointCoordinates\": {\r\n      \"x0\": 10,\r\n      \"y0\": 10,\r\n      \"z0\": 10\r\n    }\r\n  },\r\n  \"edgesLength\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:44340/api/Cubes3DIntersection/post",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44340",
					"path": [
						"api",
						"Cubes3DIntersection",
						"post"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}